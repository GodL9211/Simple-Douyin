// Code generated by hertz generator.

package api

import (
	"context"

	api "Simple-Douyin/cmd/api/biz/model/api"
	"Simple-Douyin/cmd/api/rpc"
	"Simple-Douyin/kitex_gen/comment"
	"Simple-Douyin/pkg/constants"
	"Simple-Douyin/pkg/errno"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/utils"
)

// CommentAction .
// @router /douyin/comment/action/ [POST]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		// c.String(consts.StatusBadRequest, err.Error())
		return
	}

	// v, _ := c.Get(constants.IdentityKey)
	err = rpc.CommentAction(context.Background(), &comment.CommentActionRequest{
		Token:       req.Token,
		VideoId:     req.VideoID, // 此处是否需要使用 Get 进行存在性校验，由于使用 Token 作为全局唯一标识代替 UserID 而引入的问题
		ActionType:  req.ActionType,
		CommentText: req.CommentText,
		CommentId:   req.CommentID,
	})
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	SendResponse(c, errno.Success, nil)
}

// CommentList .
// @router /douyin/comment/list/ [GET]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	// v, _ := c.Get(consts.IdentityKey)
	commentList, err := rpc.CommentList(context.Background(), &comment.CommentListRequest{
		Token:   req.Token,
		VideoId: req.VideoID, // 此处是否需要使用 Get 进行存在性校验，由于使用 Token 作为全局唯一标识代替 UserID 而引入的问题
	})
	if err != nil {
		SendResponse(c, errno.ConvertErr(err), nil)
		return
	}
	SendResponse(c, errno.Success, utils.H{
		constants.Comments: commentList,
	})
}
