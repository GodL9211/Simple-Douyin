// Code generated by hertz generator.

package api

import (
	"context"

	"Simple-Douyin/cmd/api/biz/handler/pack"
	api "Simple-Douyin/cmd/api/biz/model/api"
	"Simple-Douyin/cmd/api/rpc"
	"Simple-Douyin/kitex_gen/comment"
	"Simple-Douyin/pkg/constants"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CommentAction .
// @router /douyin/comment/action/ [POST]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	v, _ := c.Get(constants.IdentityKey)
	comment, err := rpc.CommentAction(context.Background(), &comment.CommentActionRequest{
		UserId:      v.(*api.User).ID,
		VideoId:     req.VideoID,
		ActionType:  req.ActionType,
		CommentText: req.CommentText,
		CommentId:   req.CommentID,
	})
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}
	resp := new(api.CommentActionResponse)
	resp.Comment = pack.Comment(comment)

	c.JSON(consts.StatusOK, resp)
}

// CommentList .
// @router /douyin/comment/list/ [GET]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	// 可以在未登录的状态下返回评论列表的方式：1.干掉 JWT 验证；2. UserId = 0 表示未登录状态
	// v, _ := c.Get(constants.IdentityKey)
	commentList, err := rpc.CommentList(context.Background(), &comment.CommentListRequest{
		// UserId:  v.(*api.User).ID,
		VideoId: req.VideoID,
	})
	if err != nil {
		c.String(consts.StatusInternalServerError, err.Error())
		return
	}

	resp := new(api.CommentListResponse)
	resp.CommentList = pack.Comments(commentList)

	c.JSON(consts.StatusOK, resp)
}
